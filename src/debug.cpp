#include <GL/glew.h>
#include <soglu/debug.hpp>

namespace soglu {

std::string
info(const TextureId &aTexture)
{
	//GL_CHECKED_CALL(glGe)
}

#define STRINGIFY_ENUM(ENUM)\
	std::pair<GLenum, std::string>(ENUM, #ENUM)

std::string
enumToString(GLenum aEnum)
{
	static const std::map<GLenum, std::string> cEnumMap = {
		STRINGIFY_ENUM(GL_TEXTURE_3D),
		STRINGIFY_ENUM(GL_PROXY_TEXTURE_3D),
		STRINGIFY_ENUM(GL_TEXTURE_2D_ARRAY),
		STRINGIFY_ENUM(GL_PROXY_TEXTURE_2D_ARRAY),



		STRINGIFY_ENUM(GL_UNSIGNED_BYTE),
		STRINGIFY_ENUM(GL_BYTE),
		STRINGIFY_ENUM(GL_UNSIGNED_SHORT),
		STRINGIFY_ENUM(GL_SHORT),
		STRINGIFY_ENUM(GL_UNSIGNED_INT),
		STRINGIFY_ENUM(GL_INT),
		STRINGIFY_ENUM(GL_FLOAT),

		STRINGIFY_ENUM(GL_RED),
		STRINGIFY_ENUM(GL_RG),
		STRINGIFY_ENUM(GL_RGB),
		STRINGIFY_ENUM(GL_RGBA),

		STRINGIFY_ENUM(GL_LUMINANCE),
		//R
		STRINGIFY_ENUM(GL_R8),
		STRINGIFY_ENUM(GL_R8I),
		STRINGIFY_ENUM(GL_R8UI),
		STRINGIFY_ENUM(GL_R16),
		STRINGIFY_ENUM(GL_R16I),
		STRINGIFY_ENUM(GL_R16UI),
		STRINGIFY_ENUM(GL_R16F),
		STRINGIFY_ENUM(GL_R32I),
		STRINGIFY_ENUM(GL_R32UI),
		STRINGIFY_ENUM(GL_R32F),
		//RG
		STRINGIFY_ENUM(GL_RG8),
		STRINGIFY_ENUM(GL_RG8I),
		STRINGIFY_ENUM(GL_RG8UI),
		STRINGIFY_ENUM(GL_RG16),
		STRINGIFY_ENUM(GL_RG16I),
		STRINGIFY_ENUM(GL_RG16UI),
		STRINGIFY_ENUM(GL_RG16F),
		STRINGIFY_ENUM(GL_RG32I),
		STRINGIFY_ENUM(GL_RG32UI),
		STRINGIFY_ENUM(GL_RG32F),
		//RGB
		STRINGIFY_ENUM(GL_RGB8),
		STRINGIFY_ENUM(GL_RGB8I),
		STRINGIFY_ENUM(GL_RGB8UI),
		STRINGIFY_ENUM(GL_RGB16),
		STRINGIFY_ENUM(GL_RGB16I),
		STRINGIFY_ENUM(GL_RGB16UI),
		STRINGIFY_ENUM(GL_RGB16F),
		STRINGIFY_ENUM(GL_RGB32I),
		STRINGIFY_ENUM(GL_RGB32UI),
		STRINGIFY_ENUM(GL_RGB32F),
		//RGBA
		STRINGIFY_ENUM(GL_RGBA8),
		STRINGIFY_ENUM(GL_RGBA8I),
		STRINGIFY_ENUM(GL_RGBA8UI),
		STRINGIFY_ENUM(GL_RGBA16),
		STRINGIFY_ENUM(GL_RGBA16I),
		STRINGIFY_ENUM(GL_RGBA16UI),
		STRINGIFY_ENUM(GL_RGBA16F),
		STRINGIFY_ENUM(GL_RGBA32I),
		STRINGIFY_ENUM(GL_RGBA32UI),
		STRINGIFY_ENUM(GL_RGBA32F),
	};

	auto it = cEnumMap.find(aEnum);
	if (it == end(cEnumMap)) {
		return "--UNKNOWN ENUM--";
	}

	return it->second;
}

} // namespace soglu
